{
  "swaggerDefinition": {
    "openapi": "3.0.0",
    "info": {
      "title": "Base JS - First Server",
      "version": "1.0.0",
      "description": "API documentation"
    },
    "servers": [
      {
        "url": "http://localhost:3000",
        "description": "Development server"
      }
    ],
    "components": {
      "securitySchemes": {
        "bearerAuth": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      },
      "schemas": {
        "User": {
          "type": "object",
          "required": [
            "firstName",
            "lastName",
            "username",
            "email",
            "password"
          ],
          "properties": {
            "firstName": {
              "type": "string",
              "description": "The user's first name",
              "example": "John"
            },
            "lastName": {
              "type": "string",
              "description": "The user's last name",
              "example": "Doe"
            },
            "username": {
              "type": "string",
              "description": "The user's username",
              "example": "johndoe"
            },
            "email": {
              "type": "string",
              "description": "The user's email",
              "example": "johndoe@example.com"
            },
            "phone": {
              "type": "string",
              "description": "The user's phone number",
              "example": "+1234567890"
            },
            "password": {
              "type": "string",
              "description": "The user's password",
              "example": "secret"
            },
            "token": {
              "type": "string",
              "description": "An optional token for the user",
              "example": "somerandomtoken"
            }
          }
        },
        "Login": {
          "type": "object",
          "required": ["username", "password"],
          "properties": {
            "username": {
              "type": "string",
              "description": "The user's username",
              "example": "johndoe"
            },
            "password": {
              "type": "string",
              "description": "The user's password",
              "example": "secret"
            }
          }
        }
      },
      "responses": {
        "NotFound": {
          "description": "Resource not found",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type_error": {
                    "type": "string",
                    "example": "no-found"
                  },
                  "message": {
                    "type": "string",
                    "example": "Resource not found"
                  }
                }
              }
            }
          }
        },
        "ValidationError": {
          "description": "Validation error",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type_error": {
                    "type": "string",
                    "example": "validator"
                  },
                  "message": {
                    "type": "string",
                    "example": "Validation error"
                  }
                }
              }
            }
          }
        },
        "DuplicateError": {
          "description": "Duplicate entry",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type_error": {
                    "type": "string",
                    "example": "duplicate"
                  },
                  "message": {
                    "type": "string",
                    "example": "Duplicate entry"
                  }
                }
              }
            }
          }
        }
      }
    },
    "tags": [
      {
        "name": "User",
        "description": "Operations about user"
      },
      {
        "name": "Login",
        "description": "Operations about authentification"
      }
    ]
  },
  "apis": ["./controllers/*.js"]
}
